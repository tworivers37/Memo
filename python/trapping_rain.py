
# ???? ??? ??? ????? ?????. ?? ?? ????? ?? ?? ?? ?? ???, ?? ??? ?? ?? ?????.

# ??? ??? ?, ??? ?? ??? ???? ??? ?? ? ??? ?? ????. ??? ??? ?? ?? trapping_rain? ??? ??? ???.

# ?? trapping_rain? ?? ?? ??? ???? ??? buildings? ????? ??, ??? ??? ??? ??? ???.

# ?? ??? ???? buildings? [3, 0, 0, 2, 0, 4]? ????? ???. ??? 0? ???? ?? 33? ???, 3? ???? ?? 22? ???, 5? ???? ?? 44? ??? ??? ????. 1?, 2?, 4? ????? ??? ????.

# ??? ??? ??? ?? ? 1010 ??? ??? ?? ? ????. ??? trapping_rain ??? 10? ???? ??.

# ???? ???? buildings? [0, 1, 0, 2, 1, 0, 1, 3, 2, 1, 2, 1]? ????? ???. ??? ??? ??? ?? ? 66 ??? ??? ?? ? ????. ??? trapping_rain ??? 6? ???? ??

def trapping_rain(buildings):
    total = 0
    total_builgings_value = 0

    for building in buildings:
        total_builgings_value += building

    while total_builgings_value > 0:
        this_building = None
        count = 0
        closed = False
        for i in range(0 if (this_building == None) else this_building, len(buildings)):
            if buildings[i] == 0:
                if this_building is not None and i != len(buildings) - 1:
                    count += 1
                    closed = False
            else:
                this_building = i

                buildings[this_building] -= 1
                total_builgings_value -= 1
                closed = True

        if closed == True:
            total += count

    return total

print(trapping_rain([3, 0, 0, 2, 0, 4]))
print(trapping_rain([0, 1, 0, 2, 1, 0, 1, 3, 2, 1, 2, 1]))
print(trapping_rain([0, 0, 0, 0, 0]))
print(trapping_rain([2, 1, 1, 1, 1]))
print(trapping_rain([0, 0, 5, 0, 0]))
print(trapping_rain([1, 0, 5, 0, 5]))
print(trapping_rain([1, 2, 5, 4, 5]))
